name: "Elyseum Coverage Reporter"
description: "Installs elyseum-cli, runs it, and comments on a PR with the results"
inputs:
  github_token:
    description: 'GitHub API Access Token.'
    default: ${{ github.token }}
    required: false
  github_token_actor:
    description: 'The name of the GitHub app that owns the GitHub API Access Token (see github_token). Used to identify pull request comments created by this action during earlier runs. Has to be set when `github_token` is set to a GitHub app installation token (other than GitHub actions). Otherwise, existing comments will not be updated, but new comments created. Note: this does not change the bot name of the pull request comments. Defaults to "github-actions".'
    default: 'github-actions'
    required: false
  result-file-path:
    description: "Path to the resulting file generated by elyseum-cli"
    default: "coverage/coverage-diff.md"
  command:
    description: "Command to run elyseum-cli with (diff-coverage, coverage, etc.)"
    default: "diff-coverage"
  comment-name:
    description: "Name of the comment to update or create"
    default: "Elyseum Coverage Reporter"
  workdir:
    description: "Working directory to run elyseum-cli in"
    default: "."
runs:
  using: "composite"
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install elyseum-cli
      shell: bash
      working-directory: ${{ inputs.workdir }}
      run: npm install -g @dragonshorn-studios/elyseum-cli

    - name: Run elyseum-cli
      shell: bash
      working-directory: ${{ inputs.workdir }}
      run: elyseum-cli ${{ inputs.command }} --reporter.coverage=github-pr-comment --reporter.coverage.github-pr-comment.comment-name "${{ inputs.comment-name }}" --reporter.coverage.github-pr-comment.comment-file-path "${{ inputs.result-file-path }}"
      env:
        GITHUB_BASE_REF: ${{ github.base_ref }}
        GITHUB_SHA: ${{ github.sha }}

    - name: Update or create comment
      shell: bash
      run: node ${{ github.action_path }}/index.js
      env:
        GITHUB_TOKEN:  ${{ inputs.github_token }}
        RESULT_FILE_PATH: ${{ inputs.workdir }}/${{ inputs.result-file-path }}
        COMMENT_NAME: ${{ inputs.comment-name }}
